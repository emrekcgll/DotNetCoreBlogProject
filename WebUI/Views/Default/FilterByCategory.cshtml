@using EntityLayer.Entities
@using PagedList
@model IPagedList<Blog>

@{
    ViewData["Title"] = "FilterByCategory";
    Layout = "~/Views/Shared/_DefaultLayout.cshtml";
}

<section class="parallax_window_in short" data-parallax="scroll" data-image-src="~/htmlimg/subheader_in_1.jpg" data-natural-width="1400" data-natural-height="350">
    <div id="sub_content_in">
        <div class="container">
            <h1>Our Blog</h1>
            <p>"Usu habeo equidem sanctus no ex melius"</p>
        </div>
    </div>
</section>
<div class="container margin_60_35">
    <div class="row">
        <div class="col-lg-9 pe-lg-5">
            @foreach (var item in Model)
            {
                <div class="post">
                    <figure class="animated mb-0"><a href="/Default/Details/@item.BlogID"><img src="~/images/@item.BlogImage" alt="" class="img-fluid"></a></figure>
                    <div class="post_info clearfix">
                        <div class="post-left">
                            <ul>
                                <li><i class="icon-calendar-empty"></i> On <span>@item.BlogCreatedDate.ToString("dd MMM yyyy")</span></li>
                                <li><i class="icon-inbox-alt"></i> In <a href="/Default/FilterByCategory/@item.Category.CategoryID/">@item.Category.CategoryName</a></li>
                                <li><i class="icon-user"></i> Writed by <span>@item.AppUser.UserName</span></li>
                            </ul>
                        </div>
                        <div class="post-right"><i class="icon-comment"></i>@item.Comments.Count()</div>
                    </div>
                    <h2>@item.BlogTitle</h2>
                    <p>
                        @item.BlogContent
                    </p>
                    <a href="/Default/Details/@item.BlogID" class="btn_1">Read more</a>
                </div>
            }
            <div class="text-center">
                <div class="pagination">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Previous</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">Previous</span>
                                </li>
                            }

                            @for (int i = 1; i <= Model.PageCount; i++)
                            {
                                if (Model.PageNumber == i)
                                {
                                    <li class="page-item active">
                                        <span class="page-link">@i</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                    </li>
                                }
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Next</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">Next</span>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="box_style_1">
                <div class="widget">
                    <form>
                        <input type="text" name="searchQuery" class="form-control" placeholder="Search...">
                    </form>
                </div>
                <hr>
                <div class="widget">
                    @await Component.InvokeAsync("CategoryListComponent")
                </div>
            </div>
            <div class="widget">
                @await Component.InvokeAsync("Last3BlogComponent")
            </div>
        </div>
    </div>
</div>
